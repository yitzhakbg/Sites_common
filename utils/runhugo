#!/bin/bash
# set -x
#
# If BaseUrl isn't given explicitly as the second parameter, it will be made by default from the 1st parameter
[ $# -eq 0 ] && { echo "Usage: $0 destination not given"; exit 1; }
[ $# -eq 1 ] && { echo "Usage: $0 BaseURL not given. Using default"; HUGO_BASEURL=https://www.$1.co.il; }
[ $# -eq 2 ] && { echo "Usage: $0 BaseURL is $2"; HUGO_BASEURL=$2; }
[ ! -d /var/www/src/$1 ] && { echo "no source dir"; exit 1; }
cd /var/www/src/$1
HUGO_DEST=/var/www/srv/$1
WATCH="${HUGO_WATCH:=false}"
SLEEP="${HUGO_REFRESH_TIME:=-1}"
echo "HUGO_BASEURL" $HUGO_BASEURL
echo "HUGO_DEST" $HUGO_DEST

HUGO=/usr/local/bin/hugo
# This is a (temporary) hack until v0.16 when TemplatesDir will be recognized
cp -a /var/www/src/themes .
#
# If no laoguages given, do a plain vanilla Hugo build
#
if [[ ! ${l1+x} ]] && [[ ! ${l2+x} ]]; then
  while [ true ]
  do
    echo "no languages specified"
    [[ ! -d content ]] && { echo "No content!"; exit 1; }
    find config.toml content static | entr hugo -d $HUGO_DEST -t redlounge -b $HUGO_BASEURL # Do the plain vanilla build
    echo "Sleeping for $HUGO_REFRESH_TIME seconds..."
    sleep $SLEEP
  done
fi

# Must specify two languages.
# [[ ! ${l1+x} ]] || ! [[ ${l2+x} ]] && { echo "Sorry. Only one language given"; exit 1; }
[[ ! (${l1+x} && ${l2+x}) ]] && { echo "Sorry. Only one language given"; exit 1; }

# We don't want a content directory. hcontent and econtent will each become content in turn
if [ -d content ]; then
  rm -rf content
fi

while [ true ]
do
    find confige.toml configh.toml econtent hcontent layouts ../static ../themes | entr -r fmks $HUGO_DEST $HUGO_BASEURL $1
    echo "Sleeping for $HUGO_REFRESH_TIME seconds..."
    sleep $SLEEP
done

